//====================================================================
//        Copyright (c) 2018 Carsten Wulff Software, Norway 
// ===================================================================
// Created       : wulff at 2018-3-19
// ===================================================================
//  The MIT License (MIT)
// 
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
// 
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
//  
//====================================================================
{
	"cells" :[
        { "name" : "CAPUNIT",
          "class" : "Gds::GdsPatternCapacitor",
          "yoffset": -0.5,
          "xoffset": -0.5,
          "widthoffset" : -1,
          "verticalGrid" : 1000,
          "horizontalGrid" : 1000,
          "beforePaint" : {
              "copyStringLayers" :[ ["M1", "M2"], ["M1", "M3"]   ]
          },
          "fillCoordinatesFromStrings" : [
              [   "M1",
                  "--x-xxkxxxxxxxxxkxxxx--",
                  "--x-----------------x--",
                  "--xxxxkxxxxxxxxxxxx-x--",
                  "--x-----------------x--",
                  "--x-xxxxxxxxxxxxkxxxx--",
                  "--x-----------------x--",
                  "--xxxxkxxxxxxxxxxxx-x--",
                  "--x-----------------x--",
                  "--x-xxkxxxxxxxxxkxxxx--"

              ],
              [   "M4",
                  "--x-xxxxxxxxxxxxxxxxx--",
                  "--x-----------------x--",
                  "--xxxxxxxxxxxxxxxxx-x--",
                  "--A-----------------B--",
                  "--x-xrxxxxxxxxxxxxxxx--",
                  "--x-----------------x--",
                  "--xxxxxxxxxxxxxxrxx-x--",
                  "--x-----------------x--",
                  "--x-xxxxxxxxxxxxxxxxx--"

              ]

          ],
          "afterNew" : {
              "copyColumns" :[
                  { "count" : 20, "offset" : 7,"length" : 2}
              ],
              "copyRows" :   { "count" : 10,"offset" : 0, "length": 3}
          }

        },
        { "name" : "CAPUNITNS",
          "class" : "Gds::GdsPatternCapacitor",
          "yoffset": -0.5,
          "xoffset": -0.5,
		  "heightoffset": -100,
          "widthoffset" : -1,
          "verticalGrid" : 1000,
          "horizontalGrid" : 1000,
          "beforePaint" : {
              "copyStringLayers" :[  ["M2","M1"] , ["M2","M3"]   ]
          },
          "fillCoordinatesFromStrings" : [
              [   "M2",
				  "----x-xxxxxxxxxkxxxxxxx---",
				  "----x-----------------x---",
                  "----xxxxxxxxxxxxkxxxx-x---",
                  "----x-----------------x---",
                  "----x-xxxxxxxxxxxxxxxxx---",
                  "----x-----------------x---",
				  "----xxxxxxxxxxxxxxxxx-x---",
                  "----x-----------------x---",
                  "----x-xxxxxxxxxxxxxxxxx---",
                  "----x-----------------x---",
                  "----xxxxxxxxxxxxxxxxx-x---",
                  "----x-----------------x---",
                  "----x-xxxxxxxxxxxxxxxxx---"

              ],
              [   "M4",
                  "----x-xxxxxxxxxxxxxxxxB---",
                  "----x-----------------x---",
                  "----xxxxxxxxxxxxxxxxx-x---",
				  "----x-----------------x---",
                  "----x-xxxxxxxxxxxxxxxxx---",
                  "----x-----------------x---",
                  "----xxxxxxxxxxxxxxxxx-x---",
                  "----A-----------------x---",
                  "----x-xrxxxxxxxxxxxxxxx---",
                  "----x-----------------x---",
                  "----xxxxxxxxxxxxxxrxx-x---",
                  "----x-----------------x---",
                  "----x-xxxxxxxxxxxxxxxxx---"

              ]

          ],
          "afterNew" : {
              "copyColumns" :[
                  { "count" : 9, "offset" : 9,"length" : 2}
              ],
              "copyRows" :   { "count" : 17,"offset" : 0, "length": 7}
          },
		  "afterPaint" : {
			  "translate" : [0,-80000]
		  }

        },
		        { "name" : "CDAC_UNIT",
          "class" : "Gds::GdsPatternCapacitorGnd",
          "yoffset": -0.5,
          "xoffset": -0.5,
          "verticalGrid" : 1000,
          "horizontalGrid" : 1000,
          "fillCoordinatesFromStrings" : [
              [   "M1",
                  "--xxxQxxxxx---",
                  "----------x---",
                  "--xxxxxkx-x---",
                  "--------x-D---",
                  "--xxxxxxx-x---",
                  "--------x-x---",
                  "--xxxxxkx-x---",
                  "----------x---",
                  "--xxxQxxxxx---"
              ],
              [   "M2",
                  "x-xxxQxxxxx--x",
                  "x---------x--x",
                  "x-xxxxxkx-x--x",
                  "x-------x-x--x",
                  "xxrxxxx-x-x--x",
                  "x-------x-x--x",
                  "B-xrxxxkx-x--x",
                  "x---------x--x",
                  "x-xxxQxxxxx--x"
              ],
              [   "M3",
                  "--xxxQxxxxx---",
                  "----------x---",
                  "--xxxxxxx-x---",
                  "--------x-x---",
                  "--xxxxxkx-x---",
                  "--------x-x---",
                  "--xxxxxxx-x---",
                  "----------x---",
                  "--xxxQxxxxx---"
              ],
              [   "M4",
                  "xxxxxxxxxxxxxx",
                  "x------------x",
                  "x---x--x--x--x",
                  "x---x--x--x--x",
                  "xxx-xxxxA-xxxx",
                  "x---x--x--r--x",
                  "x---x--x--x--x",
                  "x------------x",
                  "xxxxxxxxxxxxxx"
              ]
          ],
          "afterNew" : {
              "copyColumns" :[
                  { "count" : 6, "offset" : 4,"length" : 3}
              ],
              "copyRows" :   { "count" : 0,"offset" : 0, "length": 4}
          }
        },
        { "name" : "CDAC_UNIT_NOSHLD",
          "class" : "Gds::GdsPatternCapacitorGnd",
          "yoffset": -0.5,
          "xoffset": -0.5,
          "verticalGrid" : 1000,
          "horizontalGrid" : 1000,
          "fillCoordinatesFromStrings" : [
              [   "M1",
                  "----------x---",
                  "--xxxxxkx-x---",
                  "--------x-D---",
                  "--xxxxxxx-x---",
                  "--------x-l---",
                  "--xxxxxkx-x---",
                  "----------x---"
              ],
              [   "M2",
                  "x---------x--x",
                  "x-xxxxxkx-x--x",
                  "x-------x-l--x",
                  "xxrxxxx-x-x--x",
                  "x-------x-x--x",
                  "B-xrxxxkx-x--x",
                  "x---------x--x"
              ],
              [   "M3",
                  "----------x---",
                  "--xxxxxxx-x---",
                  "--------x-l---",
                  "--xxxxxkx-x---",
                  "--------x-x---",
                  "--xxxxxxx-x---",
                  "----------x---"
              ],
              [   "M4",
                  "x------------x",
                  "x---x--x--x--x",
                  "x---x--x--x--x",
                  "xxx-xxxxA-xxxx",
                  "x---x--x--r--x",
                  "x---x--x--x--x",
                  "x------------x"
              ]
          ],
          "afterNew" : {
              "copyColumns" :[
                  { "count" : 6, "offset" : 4,"length" : 3}
              ],
              "copyRows" :   { "count" : 0,"offset" : 0, "length": 4}
          }
        },
        { "name": "CDAC_C32_CV",           "class" : "Layout::LayoutDigitalCell","noPowerRoute" :1, "composite" : 1,
          "afterRoute" : {
              "addConnectivityVias" : [
                  ["M4","M5","C16",1000,2,1,15,-0.5,"CUST_C16"],
                  ["M4","M5","C8",1000,2,1,12,-0.5,"CUST_C8"],
                  ["M4","M5","C4",1000,2,1,9,-0.5,"CUST_C4"],
                  ["M4","M5","C2",1000,2,1,6,-0.5,"CUST_C2"],
                  ["M4","M5","C1A",1000,2,1,3,-0.5,"CUST_C1A"],
                  ["M4","M5","C1B",1000,2,1,18,-0.5,"CUST_C1B"]
              ],
              "addPortOnRects" : [  ["AVSS","M4", "XA01:D"],["CTOP","M2","XA32:B" ]]

          },
          "beforePaint" : {
              "addVerticalRects" :[
                  ["M5","CUST_C16"],
                  ["M5","CUST_C8"],
                  ["M5","CUST_C4"],
                  ["M5","CUST_C2"],
                  ["M5","CUST_C1A"],
                  ["M5","CUST_C1B"]
              ]
          }
        },
        { "name" : "CDAC_C32_NOSHLD_CV", "inherit" : "CDAC_C32_CV", "spiceRegex" :[ ["CDAC_UNIT","CDAC_UNIT_NOSHLD"]]},
        { "name": "CDAC8_CV", "class" : "Layout::LayoutCDACSmall", "moveTo":[0,0] },
        { "name": "CDAC9_CV", "class" : "Layout::LayoutCDACSmall", "inherit" : "CDAC8_CV"},
        { "name": "CDAC10_CV", "class" : "Layout::LayoutCDACSmall", "inherit" : "CDAC8_CV"},
        { "name": "CDAC11_CV", "class" : "Layout::LayoutCDACSmall"},
        { "name": "CDAC6_CV", "inherit" :"CDAC8_CV"},

        { "name": "CDAC10L_CV",
          "class" : "Layout::LayoutDigitalCell",
          "noPowerRoute" : 1,
          "composite" : 1,
          "boundaryIgnoreRouting" : 0,
          "afterPlace" :[
              {"addRouteRings" : [
                  ["M4","CTOP","b",4,8]
              ]},
              {"addPowerRings" : [
                  ["M4","AVSS","b",1]

              ]},
              {"TaddGuard" : [ "AVSS",2, "PP", "NOSOI"]},
              {"addRouteRings" : [
                  ["M1","AVSS","t",1,6],
                  ["M4","AVSS","t",1,-1],
                  ["M3","AVSS","t",1,-1],
                  ["M2","CP<13>","t",1,2],
                  ["M2","CP<15>","t",1,2],
                  ["M2","CP<14>","t",1,2],
                  ["M2","CP<12>","t",1,2],
                  ["M2","CP<11>","t",1,2],
                  ["M2","CP<10>","t",1,2],
                  ["M2","CP<9:0>","t"]
              ]}
          ],
          "beforeRoute" : [
              {"addPowerConnections" :[
                  ["AVSS","X","bottom"]
              ]},
              {"addRouteConnections" : [
                  ["CP<","X","top","M5"],
                  ["CTOP","X","bottom","M2"]

              ]}
          ],
          "afterRoute" :{
              "trimRouteRings" : [
                  ["CP<","top","l"]
              ],
              "addPortOnRects" : [ ["AVSS", "M1","XC1:AVSS"]]
          }

        },
        { "name" : "CDAC10L_NOSHLD_CV", "inherit" : "CDAC10L_CV", "spiceRegex" :[["CDAC_C32_CV","CDAC_C32_NOSHLD_CV"]]},
		
        { "name": "CDAC9L_CV",
          "class" : "Layout::LayoutDigitalCell",
          "noPowerRoute" : 1,
          "composite" : 1,
          "boundaryIgnoreRouting" : 0,
          "afterPlace" :[
              {"addRouteRings" : [
                  ["M4","CTOP","b",4,8]
              ]},
              {"addPowerRings" : [
                  ["M4","AVSS","b",1]

              ]},
              {"addRouteRings" : [
                  ["M1","AVSS","t",1,6],
                  ["M4","AVSS","t",1,-1],
                  ["M3","AVSS","t",1,-1],
                  ["M2","CP<13>","t",1,6],
                  ["M2","CP<12>","t",1,2],
                  ["M2","CP<11>","t",1,2],
                  ["M2","CP<10>","t",1,2],
                  ["M2","CP<9:0>","t"]
              ]}

          ],
          "beforeRoute" : [
              {"addPowerConnections" :[
                  ["AVSS","X","bottom"]
              ]},
              {"addRouteConnections" : [
                  ["CP<","X","top","M5"],
                  ["CTOP","X","bottom","M2"]

              ]}
          ],
          "afterRoute" :{
              "trimRouteRings" : [
                  ["CP<","top","l"]
              ],
              "addPortOnRects" : [ ["AVSS", "M1","XC1:AVSS"]]
          }
        },
		{ "name" : "CDAC9L_NOSHLD_CV", "inherit" : "CDAC9L_CV", "spiceRegex" :[["CDAC_C32_CV","CDAC_C32_NOSHLD_CV"]]},
        { "name" : "CDAC10LR_CV", "class" : "Layout::LayoutRotateCell", "rotateAngle" : "R90",
          "boundaryIgnoreRouting" : 0,
          "spice" : [
              ".SUBCKT CDAC10LR_CV  CP<15> CP<14> CP<13> CP<12> CP<11> CP<10> CP<9> CP<8> CP<7> CP<6> CP<5> CP<4> CP<3> CP<2> CP<1> CP<0> CTOP  AVSS",
              "XA1  CP<15> CP<14> CP<13> CP<12> CP<11> CP<10> CP<9> CP<8> CP<7> CP<6> CP<5> CP<4> CP<3> CP<2> CP<1> CP<0> CTOP  AVSS CDAC10L_CV",
              ".ends"
          ]
        },
        { "name" : "CDAC10LR_NOSHLD_CV", "inherit" : "CDAC10LR_CV", "spiceRegex" :[["CDAC10L_CV","CDAC10L_NOSHLD_CV"]]},
        { "name" : "CDAC9LR_CV", "class" : "Layout::LayoutRotateCell", "rotateAngle" : "R90",
          "boundaryIgnoreRouting" : 0,
          "spice" : [
              ".SUBCKT CDAC9LR_CV  CP<13> CP<12> CP<11> CP<10> CP<9> CP<8> CP<7> CP<6> CP<5> CP<4> CP<3> CP<2> CP<1> CP<0> CTOP  AVSS",
              "XA1   CP<13> CP<12> CP<11> CP<10> CP<9> CP<8> CP<7> CP<6> CP<5> CP<4> CP<3> CP<2> CP<1> CP<0> CTOP  AVSS CDAC9L_CV",
              ".ends"
          ]
        },
		{ "name" : "CDAC9LR_NOSHLD_CV", "inherit" : "CDAC9LR_CV", "spiceRegex" :[["CDAC9L_CV","CDAC9L_NOSHLD_CV"]]},
		  { "name": "CDAC8L_CV",
          "class" : "Layout::LayoutDigitalCell",
          "noPowerRoute" : 1,
          "composite" : 1,
          "boundaryIgnoreRouting" : 0,
          "afterPlace" :[
              {"addRouteRings" : [
                  ["M4","CTOP","b",4,8]
              ]},
              {"addPowerRings" : [
                  ["M4","AVSS","b",1]

              ]},
              {"addRouteRings" : [
                  ["M1","AVSS","t",1,6],
                  ["M4","AVSS","t",1,-1],
                  ["M3","AVSS","t",1,-1],
                  ["M2","CP<11>","t",1,2],
                  ["M2","CP<10>","t",1,2],
                  ["M2","CP<9:0>","t"]
              ]}

          ],
          "beforeRoute" : [
              {"addPowerConnections" :[
                  ["AVSS","X","bottom"]
              ]},
              {"addRouteConnections" : [
                  ["CP<","X","top","M5"],
                  ["CTOP","X","bottom","M2"]

              ]}
          ],
          "afterRoute" :{
              "trimRouteRings" : [
                  ["CP<","top","l"]
              ],
              "addPortOnRects" : [ ["AVSS", "M1","XC1:AVSS"]]
          }
          },
		{ "name" : "CDAC8LR_CV", "class" : "Layout::LayoutRotateCell", "rotateAngle" : "R90",
          "boundaryIgnoreRouting" : 0,
          "spice" : [
              ".SUBCKT CDAC8LR_CV  CP<11> CP<10> CP<9> CP<8> CP<7> CP<6> CP<5> CP<4> CP<3> CP<2> CP<1> CP<0> CTOP  AVSS",
              "XA1   CP<11> CP<10> CP<9> CP<8> CP<7> CP<6> CP<5> CP<4> CP<3> CP<2> CP<1> CP<0> CTOP  AVSS CDAC8L_CV",
              ".ends"
          ]
        }


		]
}
